name: Deploy release

on:
  push

jobs:
  deploy:
    runs-on: macos-latest
    name: Deploy release 

    steps:
      - name: git checkout
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Setup Java 11
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: 11

      - name: Setup Gradle and task/dependency caching
        uses: gradle/actions/setup-gradle@v4

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v2

      - name: Setup ninja
        uses: clementetb/setup-ninja@master

      - name: Install ccache
        uses: hendrikmuhs/ccache-action@v1.2.13
        with:
          key: 'jvm-package'
          max-size: '2.0G'

      - name: Install coreutils and s3cmd
        run: brew install coreutils s3cmd

      - name: Prepend ccache executables to the PATH
        run: echo "/usr/lib/ccache:/usr/local/opt/ccache/libexec" >> $GITHUB_PATH

      # See https://github.com/hendrikmuhs/ccache-action/issues/94
      - name: Configure ccache
        run: |
          ccache --set-config="compiler_check=content"
          ccache --show-config
          echo '#!/bin/bash\nccache clang "$@"%"' > /usr/local/bin/ccache-clang 
          echo '#!/bin/bash\nccache clang++ "$@"%"' > /usr/local/bin/ccache-clang++          

      # TODO This matches 23.2.8568313, but what happens if we define specific ndk version in our build? 
      - name: Setup NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r23c
          
      - name: Restore m2-buildrepo
        uses: actions/download-artifact@v4
        with:
          name: all-packages-${{ inputs.version-label }}
          path: ./packages/build/m2-buildrepo

      - name: Publish release to Maven Central
        run: |
         set +x
         sh ./tools/publish_release.sh "${{ secrets.MAVEN_CENTRAL_USER_TOKEN }}" "${{ secrets.MAVEN_CENTRAL_USER_TOKEN_PASSWORD }}" \
         "${{ secrets.GRADLE_PORTAL_KEY }}" "${{ secrets.GRADLE_PORTAL_SECRET }}" \
         '-PsignBuild=false -Prealm.kotlin.copyNativeJvmLibs=linux,windows'
        
